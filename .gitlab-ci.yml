stages:
    - build
    - push
    - test
    - acceptance_tests

variables:
    IMAGE_NAME: publisher_service
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: latest
    REGISTRY: 192.168.140.136:5000
    REGISTRY_USER: admin
    REGISTRY_PASSWORD: admin

build image:
    tags:
        - building
    stage: build
    cache:
        paths:
            - .docker/cache
    script:
        - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
        - docker image prune -f
    when: manual
    allow_failure: false

push image:
    tags:
        - pushing
    stage: push
    needs:
        - build image
    script:
        - echo "$REGISTRY_PASSWORD" | docker login $REGISTRY -u "$REGISTRY_USER" --password-stdin
        - docker tag ${IMAGE_NAME}:${IMAGE_TAG} $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG}
        - docker push $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG}
        - docker rmi $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG}
    allow_failure: false

test run:
    tags:
        - testing
    stage: test
    needs:
        - build image
    script:
        - echo "$REGISTRY_PASSWORD" | docker login $REGISTRY -u "$REGISTRY_USER" --password-stdin
        - docker run -d --network apps_network -p 7070:8080 --name ${IMAGE_NAME} -e POSTGRES_CONNECTION="Host=postgresql;Port=5432;Database=usersdb;Username=api;Password=api;Pooling=true;" -e RABBITMQ_HOST="rabbitmq" $REGISTRY/${IMAGE_NAME}:${IMAGE_TAG}
    allow_failure: false
